/*!
 * @file GeeGrow_SSD1306_libLettersAscii.h
 *
 * This is an addon library for the GeeGrow SSD1306 128x32 display,
   which implements support of ASCII letters
 * https://geegrow.ru
 *
 * @section author Author
 * Written by Anton Pomazanov
 *
 * @section license License
 * BSD license, all text here must be included in any redistribution.
 *
 */

#ifndef _GEEGROW_SSD1306_LIBLETTERS_ASCII_H_
#define _GEEGROW_SSD1306_LIBLETTERS_ASCII_H_

#include <Arduino.h>
#include <avr/pgmspace.h>
#include <GeeGrow_SSD1306_defines.h>

/**************************************************************************/
/*!
    @brief    Class that allows to use ASCII letters
*/
/**************************************************************************/
class GeeGrow_SSD1306_libLettersAscii {
    public:
        GeeGrow_SSD1306_libLettersAscii(){}
        ~GeeGrow_SSD1306_libLettersAscii(){}
        uint8_t* getBitMap(char _char);
};

/**************************************************************************/
/*!
    @brief    Bitmaps for ASCII letters
*/
/**************************************************************************/
const uint8_t fontLibLettersAscii[] PROGMEM = {
    0x7C, 0x12, 0x11, 0x12, 0x7C,    // A
    0x7F, 0x49, 0x49, 0x49, 0x36,    // B
    0x3E, 0x41, 0x41, 0x41, 0x22,    // C
    0x7F, 0x41, 0x41, 0x41, 0x3E,    // D
    0x7F, 0x49, 0x49, 0x49, 0x41,    // E
    0x7F, 0x09, 0x09, 0x09, 0x01,    // F
    0x3E, 0x41, 0x41, 0x51, 0x73,    // G
    0x7F, 0x08, 0x08, 0x08, 0x7F,    // H
    0x00, 0x41, 0x7F, 0x41, 0x00,    // I
    0x20, 0x40, 0x41, 0x3F, 0x01,    // J
    0x7F, 0x08, 0x14, 0x22, 0x41,    // K
    0x7F, 0x40, 0x40, 0x40, 0x40,    // L
    0x7F, 0x02, 0x1C, 0x02, 0x7F,    // M
    0x7F, 0x04, 0x08, 0x10, 0x7F,    // N
    0x3E, 0x41, 0x41, 0x41, 0x3E,    // O
    0x7F, 0x09, 0x09, 0x09, 0x06,    // P
    0x3E, 0x41, 0x51, 0x21, 0x5E,    // Q
    0x7F, 0x09, 0x19, 0x29, 0x46,    // R
    0x26, 0x49, 0x49, 0x49, 0x32,    // S
    0x03, 0x01, 0x7F, 0x01, 0x03,    // T
    0x3F, 0x40, 0x40, 0x40, 0x3F,    // U
    0x1F, 0x20, 0x40, 0x20, 0x1F,    // V
    0x3F, 0x40, 0x38, 0x40, 0x3F,    // W
    0x63, 0x14, 0x08, 0x14, 0x63,    // X
    0x03, 0x04, 0x78, 0x04, 0x03,    // Y
    0x61, 0x59, 0x49, 0x4D, 0x43,    // Z
    0x20, 0x54, 0x54, 0x78, 0x40,    // a
    0x7F, 0x28, 0x44, 0x44, 0x38,    // b
    0x38, 0x44, 0x44, 0x44, 0x28,    // c
    0x38, 0x44, 0x44, 0x28, 0x7F,    // d
    0x38, 0x54, 0x54, 0x54, 0x18,    // e
    0x00, 0x08, 0x7E, 0x09, 0x02,    // f
    0x18, 0xA4, 0xA4, 0x9C, 0x78,    // g
    0x7F, 0x08, 0x04, 0x04, 0x78,    // h
    0x00, 0x44, 0x7D, 0x40, 0x00,    // i
    0x20, 0x40, 0x40, 0x3D, 0x00,    // j
    0x7F, 0x10, 0x28, 0x44, 0x00,    // k
    0x00, 0x41, 0x7F, 0x40, 0x00,    // l
    0x7C, 0x04, 0x78, 0x04, 0x78,    // m
    0x7C, 0x08, 0x04, 0x04, 0x78,    // n
    0x38, 0x44, 0x44, 0x44, 0x38,    // o
    0xFC, 0x18, 0x24, 0x24, 0x18,    // p
    0x18, 0x24, 0x24, 0x18, 0xFC,    // q
    0x7C, 0x08, 0x04, 0x04, 0x08,    // r
    0x48, 0x54, 0x54, 0x54, 0x24,    // s
    0x04, 0x04, 0x3F, 0x44, 0x24,    // t
    0x3C, 0x40, 0x40, 0x20, 0x7C,    // u
    0x1C, 0x20, 0x40, 0x20, 0x1C,    // v
    0x3C, 0x40, 0x30, 0x40, 0x3C,    // w
    0x44, 0x28, 0x10, 0x28, 0x44,    // x
    0x4C, 0x90, 0x90, 0x90, 0x7C,    // y
    0x44, 0x64, 0x54, 0x4C, 0x44     // z
};

#endif /* _GEEGROW_SSD1306_LIBLETTERS_ASCII_H_ */
